package wta_problem;

import java.util.ArrayList;
import java.util.HashMap;

public class Chromosome 
{
	private ArrayList<Gene> genes;
	private float fitnessValue;
	
	
	/**
	 * @param chromosomeGenes
	 * @param fitnessValue
	 */
	public Chromosome(ArrayList<Gene> chromosomeGenes) {
		this.genes = chromosomeGenes;
		this.fitnessValue = calculateFitnessValue();
	}
	
	private float calculateFitnessValue() 
	{
		// <targetName , multiplication of probabilities>. 
		HashMap<Integer, Float> map = new HashMap<Integer, Float>();
		for(int i = 0 ; i < genes.size() ; i++)
		{
			Gene gene = genes.get(i);
			Target target = gene.getTarget();
			Weapon weapon = gene.getWeapon();
			
			float suvivalProb = Population.successProbability(weapon.getIthName(), target.getName());
			
			if(map.get(target.getName()) == null)
			{
				
			}
			
		}
		
		return 0;
	}
	
	
	/**
	 * @param index
	 * @param New Target
	 */
	public void changeGeneTarget(int index , Target target) // used in mutation
	{
		genes.get(index).setTarget(target);
	}
	

	
	/**
	 * @return the chromosomeGenes
	 */
	public ArrayList<Gene> getChromosomeGenes() {
		return genes;
	}
	/**
	 * @param chromosomeGenes the chromosomeGenes to set
	 */
	public void setChromosomeGenes(ArrayList<Gene> chromosomeGenes) {
		this.genes = chromosomeGenes;
	}
	/**
	 * @return the fitnessValue
	 */
	public float getFitnessValue() {
		return fitnessValue;
	}
	/**
	 * @param fitnessValue the fitnessValue to set
	 */
	public void setFitnessValue(float fitnessValue) {
		this.fitnessValue = fitnessValue;
	}
	
	
	
}
